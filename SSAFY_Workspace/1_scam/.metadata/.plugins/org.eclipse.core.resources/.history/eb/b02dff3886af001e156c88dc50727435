import java.util.Arrays;
import java.util.Date;

public class DataTypeTest {

	public static void main(String[] args) {
		byte b1 = 10; // byte의 표현 범위에 맞는 primitive int로 해서 묵시적 casting 
		short s1 = 200; // short의 표현 범위에 맞는 primitive int로 해서 묵시적 casting 
		int score = 100; // 정수의 기본형 int (primitive)
		long sum = 3_000_000_000L; // L 안붙여서 오류 , L붙이면 long이라는 명시

		boolean isSuccess = true;
		
		char ch1 = 'A'; // 문자는 char primitive , 문자열은 ""로 표현 -> ref type
//		String st1 = "A"; // 문자열
		
		float f1 = 3.45F; // 실수형 상수는 default가 double, F를 붙여야 한다.
		double d = 3.45; // D도 있나보다, 굳이 안붙여도 double이니까 굳이?
		double d2 = 123.456E-2; // 지수형 표현도 가능
		// 여기까지는 Primitivie Data type : 하나의 값을 표현, 할당된 곳에 데이터가 직접 저장 ( 그냥 그 자체 )
		
		// 참조형 타입 ( 객체 타입 ) : 할당된 공간에 참조값이 저장되는 타입 -> 참조값을 통해 객체를 참조해서 객체 사용 : pass by value
		// 값을 가지고 있는 것 그대로 줌. 그것이 primitive던 reference던
		
		Date today = new Date(); // 정적 타이핑 언어 ( 정확하게 표현할 수 있는 데이터 타입을 선언해줘야 함. 지역변수는 약간 편하게 가능
		String[] names = new String[] {"ㅇㅇ", "ㅎㅎ", "ㅠㅠ"}; // 객체는 복합체 ( 여러가지 가능 ) // 문자열 : 문자가 여러개 나열되어 있는 // 단일 문자의 여러개 (char primitive)
		System.out.println(isSuccess);
		System.out.println(ch1);
		System.out.println(b1);
		System.out.println(s1);
		System.out.println(score);
		System.out.println(sum);
		System.out.println(f1);
		System.out.println(d);
		System.out.println(d2);
		System.out.println("--------------------------------------");
		System.out.println(today);
		System.out.println(today.toString());
		System.out.println(names);
		System.out.println(names.toString());
		System.out.println(Arrays.toString(names));
	}
}
